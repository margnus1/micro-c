options {
  STATIC = false; // Bug in 6.0 with STATIC=true
}

PARSER_BEGIN(LexerTest)

class LexerTest {
	public static void main(String[] arg)
        throws ParseException
    {
        LexerTest parser = new LexerTest(System.in);

        parser.Start();
    }
}

PARSER_END(LexerTest)


SKIP : { " " | "\t" | "\n" | "\r" }

SPECIAL_TOKEN : {
    <SINGLE_LINE_COMMENT: "//"(~["\n","\r"])* ("\n"|"\r"|"\r\n")? > }


TOKEN : {<CHAR    : "char">}

TOKEN : {<ELSE    : "else">}
TOKEN : {<EXTERN  : "extern">}
TOKEN : {<IF      : "if">}
TOKEN : {<INT     : "int">}
TOKEN : {<RETURN  : "return">}
TOKEN : {<VOID    : "void">}
TOKEN : {<WHILE   : "while">}

TOKEN : {<NOTEQ  : "!=">}


TOKEN : {<NOT    : "!">}
TOKEN : {<ANDAND : "&&">}
TOKEN : {<OROR   : "||">}
TOKEN : {<LPAREN : "(">}
TOKEN : {<RPAREN : ")">}
TOKEN : {<MUL    : "*">}
TOKEN : {<PLUS   : "+">}
TOKEN : {<COMMA  : ",">}
TOKEN : {<MINUS  : "-">}
TOKEN : {<DIV    : "/">}
TOKEN : {<SEMI   : ";">}
TOKEN : {<LTEQ   : "<=">}
TOKEN : {<LT     : "<">}
TOKEN : {<EQEQ   : "==">}
TOKEN : {<EQ     : "=">}
TOKEN : {<GTEQ   : ">=">}
TOKEN : {<GT     : ">">}
TOKEN : {<LBRACK : "[">}
TOKEN : {<RBRACK : "]">}
TOKEN : {<LBRACE : "{">}
TOKEN : {<RBRACE : "}">}

// TOKEN : {<STRING >}

TOKEN : {<INTEGER_CONSTANT : (["0"-"9"])+>}

//  TOKEN : {<IDENT >}





void Start() :
{
  Token t;
}
{
  (
   (t = <CHAR>   |
    t = <ELSE>   |
    t = <EXTERN> |
    t = <INT>    |
    t = <RETURN> |
    t = <VOID>   |
    t = <WHILE>  |
    t = <NOTEQ>  |
    t = <INTEGER_CONSTANT>) {
       System.out.println(LexerTestConstants.tokenImage[t.kind] + " : \"" + t.image + "\"" +
                          (t.getValue() != null ? " = " + t.getValue().toString() : ""));
   }
  )* <EOF>
}
